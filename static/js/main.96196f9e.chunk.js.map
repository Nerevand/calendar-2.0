{"version":3,"sources":["components/ui/Button/Button.tsx","components/ui/Dialog/Dialog.tsx","components/ui/DialogActions/DialogActions.jsx","components/ui/DialogContent/DialogContent.tsx","components/ui/Typography/Typography.tsx","invariants.ts","components/ui/DialogTitle/DialogTitle.tsx","components/ui/TextField/TextField.tsx","components/ui/FormControl/FormControl.tsx","components/common/Dialog/TimePicker.tsx","components/common/Dialog/Dialog.tsx","Context.tsx","components/ui/ButtonGroup/ButtonGroup.tsx","components/ui/Select/Select.tsx","components/common/Header/Header.tsx","pages/Weekly/Header.tsx","pages/Weekly/Weekly.tsx","pages/Calendar/MonthlyHeader.tsx","pages/Calendar/Calendar.tsx","i18n/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Button","children","otherButtonProps","MuiDialog","props","Dialog","DialogActions","React","forwardRef","ref","muiName","defaultProps","disableSpacing","DialogContent","Typography","semiBold","className","underline","other","variant","TypesOfCalendar","Routes","DialogTitle","disableTypography","TypographyProps","disableTextTransform","MuiTextField","TextField","Languages","periods","value","path","MONTHS_CON","DAYS","TIME_ZONE","MyFormControl","FormControl","useStyles","makeStyles","theme","createStyles","formControl","display","alignItems","flexDirection","margin","spacing","minWidth","select","marginLeft","NativeSelects","classes","t","useTranslation","data","handleChange","title","color","NativeSelect","onChange","inputProps","name","id","map","i","index","AlertDialogSlide","open","date","event","isEditMode","typeOfPicker","handleClose","handleAddEvent","useState","startDate","setStartDate","endDate","setEndDate","task","setTask","handleSubmit","useCallback","moment","valueOf","dateStart","dateEnd","e","console","error","setValuesToPicker","timeFrom","startOf","format","findIndex","slice","useEffect","keepMounted","onClose","aria-labelledby","aria-describedby","style","month","label","type","target","InputLabelProps","shrink","onClick","CalendarContext","createContext","CalendarProvider","i18n","eventList","setEventList","openDialog","setOpenDialog","selectedDate","setSelectedDate","selectedMonth","setSelectedMonth","Date","getFullYear","selectedYear","setSelectedYear","handleSetLanguage","lang","localStorage","setItem","changeLanguage","handleOpenDialog","handleCloseDialog","handleToday","today","year","handlePrevMonth","subtract","handleNextMonth","add","handlePrevWeek","handleNextWeek","handleChangeDay","changeMonth","changeYear","newEvent","currentEvents","log","JSON","stringify","handleEditEvent","handledeleteEvent","filter","contextValue","useMemo","activeLang","language","setLanguage","useMount","savedEvents","getItem","parse","Provider","MyButtonGroup","ButtonGroup","Header","useContext","Context","handlePrev","handleNext","titlePrev","titleNext","history","useHistory","pathname","useLocation","size","marginRight","aria-label","activeLanguage","replace","push","WeeklyHeader","Times","width","height","item","Weekly","monthCalendar","setEditEvent","renderGrid","tasksForDay","hours","start","diff","endOf","startOfDay","time","renderHours","d","length","Number","end","diferent","top","left","backgroundColor","stopPropagation","IconButton","edge","renderTaskForDay","weeks","startOfWeek","updatedDays","day","dayName","cls","clsx","highlight","renderDay","renderDays","MonthlyHeader","MonthlyCalendar","dates","setDates","preDays","nextDates","dateFrom","preMonthDayOffset","inMonth","totalDaysInCurrentMonth","daysInMonth","dateFromNextMonth","nextMonthDayOffset","nextMonthFirstDate","updatedDAys","ind","dateObj","currentTasks","overflowY","marginBottom","justifyContent","renderDate","defaultLanguage","resources","en","translation","translationEN","ua","translationUA","use","initReactI18next","init","lng","fallbackLng","App","I18nextProvider","exact","component","from","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96196f9e.chunk.js","sourcesContent":["import React from 'react'\nimport MuiButton, { ButtonProps as MuiButtonProps } from '@material-ui/core/Button'\n\nexport interface ButtonProps extends MuiButtonProps {\n  component?: React.ElementType\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  children,\n  ...otherButtonProps\n}) => {\n  return (\n    <MuiButton {...otherButtonProps}>\n      {children}\n    </MuiButton>\n  )\n}\n\nexport default Button","import React from 'react'\nimport Dialog, { DialogProps } from '@material-ui/core/Dialog';\n\nconst MuiDialog: React.FC<DialogProps> = (props) => {\n  return (\n    <Dialog {...props} />\n  )\n}\n\nexport default MuiDialog","import React from 'react'\nimport MuiDialogActions from '@material-ui/core/DialogActions'\n\nconst DialogActions = React.forwardRef(function DialogActions(props, ref) {\n  return <MuiDialogActions {...props} ref={ref} />\n})\n\nDialogActions.muiName = 'DialogActions'\n\nDialogActions.defaultProps = {\n  disableSpacing: true,\n}\n\nexport default DialogActions\n","import * as React from 'react'\nimport MuiDialogContent, {\n  DialogContentProps as MuiDialogContentProps,\n} from '@material-ui/core/DialogContent'\n\nexport type DialogContentRefType = MuiDialogContentProps['ref']\n\nexport interface DialogContentProps extends React.PropsWithoutRef<MuiDialogContentProps> {}\n\nconst DialogContent = React.forwardRef(function DialogContent(\n  props: DialogContentProps,\n  ref: DialogContentRefType\n) {\n  return <MuiDialogContent ref={ref} {...props} />\n})\n\nexport default DialogContent\n","import React from 'react'\nimport MuiTypography, { TypographyProps as MuiTypographyProps } from '@material-ui/core/Typography'\n\nexport type TypographyRefType = MuiTypographyProps['ref']\n\nexport interface TypographyProps extends React.PropsWithoutRef<MuiTypographyProps> {\n  semiBold?: boolean\n  underline?: boolean\n}\n\n\n\nexport const Typography = React.forwardRef(function Typography(\n  { semiBold, className, underline, ...other }: TypographyProps,\n  ref: TypographyRefType\n) {\n\n\n  return <MuiTypography {...other} ref={ref} />\n})\n\nTypography.defaultProps = {\n  variant: 'body1',\n}\n\nexport default Typography\n","export enum TypesOfCalendar  {\n  month = 'month',\n  week = 'week',\n}\n\nexport enum Routes  {\n  month = '/calendar-2.0/month',\n  week = '/calendar-2.0/week',\n}\n\nexport const Languages = [\n  'en',\n  'ua'\n]\n\nexport const periods = [{\n  value: 'month',\n  path: '/month'\n}, {\n  value: 'week',\n  path: '/week'\n}\n]\n\nexport const MONTHS_CON = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nexport const DAYS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", ];\n\nexport const TIME_ZONE = [\"00:00\", \"01:00\", \"02:00\", \"03:00\", \"04:00\",\n  \"05:00\", \"06:00\", \"07:00\", \"08:00\", \"09:00\", \"10:00\", \"11:00\", \"12:00\",\n  \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\",\n  \"21:00\", \"22:00\", \"23:00\"\n];\n\nexport const initialList = [\n]\n","import React from 'react'\nimport MuiDialogTitle, {\n  DialogTitleProps as MuiDialogTitleProps,\n} from '@material-ui/core/DialogTitle'\n\nimport Typography, { TypographyProps } from 'components/ui/Typography'\n\nexport type DialogTitleRefType = MuiDialogTitleProps['ref']\n\nexport interface DialogTitleProps extends React.PropsWithoutRef<MuiDialogTitleProps> {\n  disableTextTransform?: boolean\n  TypographyProps?: TypographyProps\n}\n\nconst DialogTitle: React.FC<DialogTitleProps> = React.forwardRef(function DialogTitle(\n  props,\n  ref: DialogTitleRefType\n) {\n  const { children, disableTypography, disableTextTransform, TypographyProps, ...other } = props\n\n  return (\n    <MuiDialogTitle ref={ref} disableTypography {...other}>\n      {disableTypography ? (\n        children\n      ) : (\n          <Typography\n            semiBold\n            variant=\"h2\"\n            {...TypographyProps}\n          >\n            {children}\n          </Typography>\n        )}\n    </MuiDialogTitle>\n  )\n})\n\nexport default DialogTitle\n","import React from 'react'\nimport TextField, { TextFieldProps as MuiTextFieldProps } from '@material-ui/core/TextField';\n\n\n\nconst MuiTextField: React.FC<MuiTextFieldProps> = (props) => {\n  return (\n    <TextField {...props} />\n  )\n}\n\nexport default MuiTextField","import React from 'react'\nimport FormControl, { FormControlProps } from '@material-ui/core/FormControl';\n\nconst MyFormControl: React.FC<FormControlProps> = (props) => {\n  return (\n    <FormControl {...props} />\n  )\n}\n\nexport default MyFormControl","import React from 'react';\nimport NativeSelect, { NativeSelectProps } from '@material-ui/core/NativeSelect';\nimport { useTranslation } from \"react-i18next\";\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport FormControl from 'components/ui/FormControl';\nimport Typography from 'components/ui/Typography';\n\nexport interface NativeSelectsProps extends NativeSelectProps {\n  title: string\n  data: string[]\n  handleChange: (e: React.ChangeEvent<HTMLSelectElement>) => void\n  value: string\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      display: 'flex',\n      alignItems: 'center',\n      flexDirection: 'row',\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    select: {\n      marginLeft: theme.spacing(2),\n    },\n  }),\n);\n\nexport default function NativeSelects(props: NativeSelectsProps) {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const { data, handleChange, value, title } = props;\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <Typography color=\"textSecondary\" >{t(title)}</Typography>\n        <NativeSelect\n          className={classes.select}\n          value={value}\n          onChange={handleChange}\n          inputProps={{\n            name: 'name',\n            id: 'custom-dropdown',\n          }}\n        >\n          {\n            data.map((i: string, index: number) => (\n              <option key={`${i}-${index}`} value={i}>{i}</option>\n            ))\n          }\n        </NativeSelect>\n      </FormControl>\n    </div>\n  );\n}\n","import { useState, useEffect, useCallback } from 'react';\nimport moment, { Moment } from 'moment'\n\nimport Button from 'components/ui/Button'\nimport Dialog from 'components/ui/Dialog'\nimport DialogActions from 'components/ui/DialogActions';\nimport DialogContent from 'components/ui/DialogContent';\nimport DialogTitle from 'components/ui/DialogTitle';\nimport TextField from 'components/ui/TextField'\nimport { TypesOfCalendar, TIME_ZONE } from 'invariants'\nimport { Events } from 'typedefs'\n\nimport TimePicker from './TimePicker'\n\ntype AlertDialogSlideProps = {\n  typeOfPicker: string\n  open: boolean\n  handleClose: () => void\n  date: Moment\n  handleAddEvent: (event: Events.Event) => void\n  isEditMode: boolean\n  event: Events.Event | null\n}\n\nexport default function AlertDialogSlide(props: AlertDialogSlideProps) {\n  const {\n    open,\n    date,\n    event,\n    isEditMode,\n    typeOfPicker,\n    handleClose,\n    handleAddEvent,\n  } = props\n\n  const [startDate, setStartDate] = useState<Moment>(date)\n  const [endDate, setEndDate] = useState<Moment | null>(null)\n  const [task, setTask] = useState<string>('')\n\n  const handleSubmit = useCallback(\n    () => {\n      try {\n        handleAddEvent({\n          id: event?.id || moment().valueOf(),\n          dateStart: startDate,\n          dateEnd: endDate,\n          task: task\n        })\n\n        handleClose()\n      } catch (e) {\n        console.error(e)\n      }\n    },\n    [handleAddEvent, handleClose, startDate, endDate, task, event],\n  )\n\n  const setValuesToPicker = useCallback(() => {\n    const timeFrom = `${moment(startDate).startOf('hour').format('HH')}:00`\n    const index = TIME_ZONE.findIndex((t) => t === timeFrom)\n\n    return [...(TIME_ZONE.slice(index + 1)), \"00:00\"]\n  }, [startDate])\n\n\n  useEffect(() => {\n    if (isEditMode) {\n      setStartDate(event?.dateStart || moment())\n      setEndDate(event?.dateEnd || null)\n      setTask(event?.task || '')\n    } else {\n      setStartDate(date)\n      setEndDate(null)\n      setTask('')\n    }\n  }, [isEditMode, event, date])\n\n\n\n  return (\n    <Dialog\n      open={open}\n      keepMounted\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-slide-title\"\n      aria-describedby=\"alert-dialog-slide-description\"\n    >\n      <DialogTitle id=\"alert-dialog-slide-title\" TypographyProps={{ variant: 'h5' }}>\n        {isEditMode ? \"Edit your task on this day\" : \"Create your task on this day\"}\n      </DialogTitle>\n      <DialogContent>\n\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\n          {\n            typeOfPicker === TypesOfCalendar.month\n              ? (\n                <TextField\n                  id=\"date\"\n                  label=\"Date picker\"\n                  type=\"date\"\n                  value={moment(startDate).format('YYYY-MM-DD')}\n                  onChange={(e: React.ChangeEvent<HTMLDataElement>) => setStartDate(moment(e.target.value))}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />)\n              : (\n                <div style={{\n                  display: 'flex',\n                }}>\n                  <TimePicker\n                    title=\"from\"\n                    data={TIME_ZONE}\n                    value={`${moment(startDate).startOf('hour').format('HH')}:00`}\n                    handleChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                      const date = moment(startDate).format('YYYY-MM-DD')\n                      setStartDate(moment(`${date} ${e.target.value}`))\n                    }}\n                  />\n                  <TimePicker\n                    title=\"to\"\n                    data={setValuesToPicker()}\n                    value={`${moment(endDate).startOf('hour').format('HH')}:00`}\n                    handleChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                      const date = moment(startDate).format('YYYY-MM-DD')\n                      setEndDate(moment(`${date} ${e.target.value}`))\n                    }}\n                  />\n                </div>\n              )\n          }\n\n          <TextField\n            label=\"label\"\n            value={task}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setTask(e.target.value)}\n            type=\"text\"\n          />\n        </div>\n\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Close\n          </Button>\n        <Button onClick={handleSubmit} color=\"primary\">\n          {isEditMode ? \"Save\" : \"Create\"}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}","import React, { useMemo, useCallback, useState } from 'react'\nimport moment, { Moment } from 'moment'\nimport { useTranslation } from \"react-i18next\";\nimport { useMount } from 'react-use'\n\nimport { Events } from 'typedefs'\n\ntype CalendarProviderOptions = {\n  activeLang: string\n  eventList: Events.Event[]\n  selectedDate: Moment\n  selectedMonth: number\n  selectedYear: number\n  openDialog: boolean\n  handleOpenDialog: () => void\n  handleCloseDialog: () => void\n  changeMonth: (m: number) => void\n  changeYear: (y: number) => void\n  handleChangeDay: (d: Date) => void\n  handleToday: () => void\n  handlePrevMonth: () => void\n  handleNextMonth: () => void\n  handlePrevWeek: () => void\n  handleNextWeek: () => void\n  handleAddEvent: (e: Events.Event) => void\n  handleEditEvent: (e: Events.Event) => void\n  handledeleteEvent: (id: number) => void\n  setLanguage: (l: string) => void\n}\n\nconst CalendarContext = React.createContext<CalendarProviderOptions>(null as any)\n\nexport const CalendarProvider: React.FC = ({ children }) => {\n  const { i18n } = useTranslation()\n  const [eventList, setEventList] = useState<Events.Event[]>([])\n  const [openDialog, setOpenDialog] = useState<boolean>(false)\n  const [selectedDate, setSelectedDate] = useState<moment.Moment>(moment())\n  const [selectedMonth, setSelectedMonth] = useState<number>(moment().month())\n  const [selectedYear, setSelectedYear] = useState<number>(new Date().getFullYear())\n\n  const handleSetLanguage = useCallback((lang: string) => {\n    localStorage.setItem(\"language\", lang);\n    i18n.changeLanguage(lang);\n  }, [i18n])\n\n  const handleOpenDialog = useCallback(() => {\n    setOpenDialog(true)\n  }, [setOpenDialog])\n\n  const handleCloseDialog = useCallback(() => {\n    setOpenDialog(false)\n  }, [setOpenDialog])\n\n\n\n  const handleToday = useCallback(() => {\n    const today = moment()\n    setSelectedDate(today)\n    setSelectedMonth(today.month())\n    setSelectedYear(today.year())\n  }, [setSelectedDate, setSelectedMonth, setSelectedYear])\n\n  const handlePrevMonth = useCallback(() => {\n    const data = moment(selectedDate).subtract(1, 'months')\n    setSelectedDate(data)\n    setSelectedMonth(data.month())\n    setSelectedYear(data.year())\n  }, [selectedDate, setSelectedDate, setSelectedMonth, setSelectedYear])\n\n  const handleNextMonth = useCallback(() => {\n    const data = moment(selectedDate).add(1, 'months')\n    setSelectedDate(data)\n    setSelectedMonth(data.month())\n    setSelectedYear(data.year())\n  }, [selectedDate, setSelectedDate, setSelectedMonth, setSelectedYear])\n\n  const handlePrevWeek = useCallback(() => {\n    const data = moment(selectedDate).subtract(1, 'weeks')\n    setSelectedDate(data)\n    setSelectedMonth(data.month())\n    setSelectedYear(data.year())\n  }, [selectedDate, setSelectedDate, setSelectedMonth, setSelectedYear])\n\n  const handleNextWeek = useCallback(() => {\n    const data = moment(selectedDate).add(1, 'weeks')\n    setSelectedDate(data)\n    setSelectedMonth(data.month())\n    setSelectedYear(data.year())\n  }, [selectedDate, setSelectedDate, setSelectedMonth, setSelectedYear])\n\n  const handleChangeDay = useCallback((date: Date) => {\n    setSelectedDate(moment(date))\n  }, [setSelectedDate])\n\n  const changeMonth = useCallback((month: number) => {\n    setSelectedMonth(month)\n  }, [setSelectedMonth])\n\n  const changeYear = useCallback((year: number) => {\n    setSelectedYear(year)\n  }, [setSelectedYear])\n\n  const handleAddEvent = useCallback((newEvent) => {\n    const currentEvents = [...eventList, newEvent]\n    setEventList(currentEvents)\n    console.log({ newEvent })\n    localStorage.setItem('events', JSON.stringify(currentEvents))\n  }, [eventList, setEventList])\n\n  const handleEditEvent = useCallback((event) => {\n    const currentEvents = eventList.map((e) => e.id === event.id ? event : e)\n    setEventList(currentEvents)\n    localStorage.setItem('events', JSON.stringify(currentEvents))\n  }, [eventList, setEventList])\n\n  const handledeleteEvent = useCallback((id: number) => {\n    const currentEvents = eventList.filter((e) => e.id !== id)\n    setEventList(currentEvents)\n    localStorage.setItem('events', JSON.stringify(currentEvents))\n  }, [eventList, setEventList])\n\n  const contextValue = useMemo<CalendarProviderOptions>(() => ({\n    eventList,\n    activeLang: i18n.language,\n    selectedDate,\n    selectedMonth,\n    selectedYear,\n    openDialog,\n    handleOpenDialog,\n    handleCloseDialog,\n    changeMonth,\n    changeYear,\n    handleToday,\n    handleChangeDay,\n    handlePrevMonth,\n    handlePrevWeek,\n    handleNextWeek,\n    handleNextMonth,\n    handleAddEvent,\n    handleEditEvent,\n    handledeleteEvent,\n    setLanguage: handleSetLanguage,\n  }), [\n    eventList,\n    i18n.language,\n    selectedDate,\n    selectedMonth,\n    selectedYear,\n    openDialog,\n    handleOpenDialog,\n    handleCloseDialog,\n    changeMonth,\n    changeYear,\n    handleToday,\n    handleChangeDay,\n    handlePrevMonth,\n    handleNextMonth,\n    handlePrevWeek,\n    handleNextWeek,\n    handleAddEvent,\n    handleEditEvent,\n    handledeleteEvent,\n    handleSetLanguage,\n  ])\n\n  useMount(() => {\n    const savedEvents = localStorage.getItem('events') || JSON.stringify([])\n    setEventList(JSON.parse(savedEvents))\n  })\n\n  return (\n    <CalendarContext.Provider value={contextValue}>\n      {children}\n    </CalendarContext.Provider>\n  )\n}\n\nexport default CalendarContext","import React from 'react'\nimport ButtonGroup, { ButtonGroupProps } from '@material-ui/core/ButtonGroup';\n\n\n\nconst MyButtonGroup: React.FC<ButtonGroupProps> = (props) => {\n  return (\n    <ButtonGroup {...props} />\n  )\n}\n\nexport default MyButtonGroup","import React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport NativeSelect, { NativeSelectProps } from '@material-ui/core/NativeSelect';\nimport { useTranslation } from \"react-i18next\";\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport Typography from 'components/ui/Typography';\n\ntype Periods = {\n  value: string\n  path: string\n}\nexport interface NativeSelectsProps extends NativeSelectProps {\n  data: Periods[]\n  handleChange: (e: React.ChangeEvent<HTMLSelectElement>) => void\n  value: string\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      display: 'flex',\n      alignItems: 'center',\n      flexDirection: 'row',\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    select: {\n      marginLeft: theme.spacing(2),\n    },\n  }),\n);\n\nexport default function NativeSelects(props: NativeSelectsProps) {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const { data, handleChange, value } = props;\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <Typography color=\"textSecondary\" >{t(\"period\")}</Typography>\n        <NativeSelect\n          className={classes.select}\n          value={value}\n          onChange={handleChange}\n          inputProps={{\n            name: 'name',\n            id: 'custom-dropdown',\n          }}\n        >\n          {\n            data.map((i: Periods) => (\n              <option key={i.value} value={i.path}>{t(`select.${i.value}`)}</option>\n            ))\n          }\n        </NativeSelect>\n      </FormControl>\n    </div>\n  );\n}\n","import { useContext } from \"react\";\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { useTranslation } from \"react-i18next\";\n\nimport Button from 'components/ui/Button'\nimport ButtonGroup from 'components/ui/ButtonGroup'\nimport Context from 'Context'\nimport Select from 'components/ui/Select'\nimport Typography from 'components/ui/Typography'\nimport { Languages, periods, MONTHS_CON } from \"invariants\";\n\nimport './styles.scss'\n\ntype Headerprops = {\n  handlePrev: () => void\n  handleNext: () => void\n  titlePrev: string\n  titleNext: string\n}\n\nfunction Header(props: Headerprops) {\n  const {\n    activeLang,\n    selectedMonth,\n    selectedYear,\n    setLanguage,\n    handleToday,\n  } = useContext(Context)\n  const {\n    handlePrev,\n    handleNext,\n    titlePrev,\n    titleNext\n  } = props\n  const history = useHistory()\n  const { pathname } = useLocation();\n  const { t } = useTranslation();\n\n  return (\n    <header className=\"header\">\n      <Button\n        variant=\"outlined\"\n        size=\"small\"\n        style={{ marginRight: \"20px\" }}\n        onClick={handleToday}>\n        {t(\"today\")}\n      </Button>\n\n      <ButtonGroup variant=\"outlined\" size=\"small\"\n        style={{ marginRight: \"20px\" }}\n        aria-label=\"outlined primary button group\">\n        <Button\n          onClick={handlePrev} size=\"small\" title={titlePrev}>{'<'}</Button>\n        <Button\n          onClick={handleNext} size=\"small\" title={titleNext}> {'>'}</Button>\n      </ButtonGroup>\n\n      <Typography>{t(`month.${MONTHS_CON[selectedMonth]}`)}{` - ${selectedYear}`}</Typography>\n\n      <div className=\"language-wrapper\" style={{ marginLeft: \"20px\" }}>\n        <ButtonGroup variant=\"outlined\" size=\"small\" aria-label=\"outlined primary button group\">\n          {Languages.map((i) => {\n            const activeLanguage: boolean = activeLang === i\n            return (\n              <Button\n                key={i}\n                variant={activeLanguage ? \"contained\" : 'outlined'}\n                color={activeLanguage ? \"primary\" : 'default'}\n                onClick={() => setLanguage(i)}\n              >\n                {i}\n              </Button>\n            );\n          })}\n        </ButtonGroup>\n\n      </div>\n\n      <Select\n        data={periods}\n        value={pathname.replace('/', '')}\n        handleChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n\n          history.push(`/calendar-2.0${e.target.value}`)\n        }}\n      />\n    </header>\n  );\n}\n\nexport default Header;\n","import { useContext } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport Header from 'components/common/Header'\n\nimport Context from '../../Context'\n\nfunction WeeklyHeader() {\n\n  const {\n    handlePrevWeek,\n    handleNextWeek,\n  } = useContext(Context)\n  const { t } = useTranslation();\n\n  return (\n    <Header\n      handlePrev={handlePrevWeek}\n      handleNext={handleNextWeek}\n      titlePrev={t(`titles.prevWeek`)}\n      titleNext={t(`titles.nextWeek`)}\n    />\n  );\n}\n\nexport default WeeklyHeader;\n","import React, { useState, useContext, useMemo } from 'react'\nimport clsx from 'clsx'\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport moment, { Moment } from 'moment'\nimport { useTranslation } from \"react-i18next\";\nimport { useLocation } from 'react-router-dom'\n\nimport AlertDialogSlide from 'components/common/Dialog'\nimport Context from 'Context'\nimport { TIME_ZONE, DAYS } from 'invariants'\nimport { Events } from 'typedefs'\n\nimport Header from './Header'\n\nimport './style.scss'\n\nfunction Times() {\n  const renderItem = (item: string, index: number) => {\n    return (\n      <div className='time-zone'\n        key={`${index} + ${item}`}\n      >\n        {item}\n      </div>\n    );\n  };\n\n  return (\n    <section style={{ width: \"64px\" }}>\n      <div style={{ width: '100%', height: '49px' }}></div>\n      {TIME_ZONE.map(renderItem)}\n    </section>\n  );\n}\n\nconst Weekly: React.FC = () => {\n  const {\n    eventList,\n    selectedDate,\n    openDialog,\n    handleOpenDialog,\n    handleCloseDialog,\n    handleChangeDay,\n    changeMonth,\n    changeYear,\n    handleAddEvent,\n    handleEditEvent,\n    handledeleteEvent,\n  } = useContext(Context)\n  const { t } = useTranslation();\n  const { pathname } = useLocation();\n  const monthCalendar = useMemo(() => pathname.replace('/', ''), [pathname])\n  const [event, setEditEvent] = useState<Events.Event | null>(null)\n\n  const onCloseDialog = () => {\n    setEditEvent(null)\n    handleCloseDialog()\n  }\n\n  const renderHours = (time: Date, index: number) => {\n    return (\n      <div\n        className=\"daily-time\"\n        key={index}\n        onClick={() => {\n          handleChangeDay(time)\n          handleOpenDialog()\n        }\n        }\n      />\n    );\n  };\n\n  const renderTaskForDay = (d: Events.Event, length: number, index: number) => {\n    const start = Number(moment(d.dateStart).format(\"H\"))\n    const end = Number(moment(d.dateEnd).format(\"H\"))\n    const diferent: number = end - start\n\n    const width: number = 100 / length\n\n    return (\n      <div\n        key={index}\n        className=\"daily-task\"\n        style={{\n          width: `${width}%`,\n          height: end ? `${25 * diferent}px` : \"100%\",\n          top: `${25 * start}px`,\n          left: `${width * (index + 1)}%`,\n          backgroundColor: index % 2 === 0 ? \"#7986cb\" : \"#a1b2c3\"\n        }}\n        onClick={(e) => {\n          e.stopPropagation()\n          setEditEvent(d)\n          handleOpenDialog()\n        }}\n      >\n        <p>\n          {d.task}\n        </p>\n        <div className=\"remove-event\">\n          <IconButton edge=\"end\" size='small' aria-label=\"delete\"\n            onClick={(e: React.MouseEvent) => {\n              e.stopPropagation()\n              handledeleteEvent(d.id)\n            }}>\n            <DeleteIcon />\n          </IconButton>\n        </div>\n      </div>\n    );\n  };\n\n  const renderGrid = (date: Date) => {\n    const tasksForDay = eventList.filter((item: Events.Event) =>\n      moment(date).format('YYYY-MM-DD') === moment(item.dateStart).format('YYYY-MM-DD')\n    );\n\n    const hours: any[] = []\n    const start = moment(date).startOf('day');\n    const end = moment(date).endOf('day');\n\n    const diff: number = end.diff(start, 'hours')\n\n    for (let i = 0; i <= diff; i++) {\n      //if i add one day for moment, it will change my start date of week.\n      //it is the main reason why i get start of week in loop\n      const startOfDay = moment(date).startOf('day')\n      hours.push(startOfDay.add(i, 'hours'))\n    }\n\n    return (\n      <section className='calendar-week-grid'>\n        {hours.map((time: Date, index: number) => renderHours(time, index))}\n        <div className='testClass'>\n          {tasksForDay.map((task: Events.Event, index: number) => renderTaskForDay(task, tasksForDay.length, index))}\n        </div>\n      </section>\n    );\n  };\n\n  const renderDay = ({ dayName, date }: any, index: number) => {\n    const cls = clsx(\"calendar-day\", {\n      highlight: moment(date).format('DD-MM-YYYY') === moment(selectedDate).format('DD-MM-YYYY'),\n    });\n\n    return (\n      <div className=\"weekly-day-wrapper\" key={dayName}>\n        <div\n          className={cls}\n          onClick={() => {\n            handleChangeDay(date)\n            changeYear(moment(date).year())\n            changeMonth(moment(date).month())\n          }}\n        >\n          {dayName}\n        </div>\n        {renderGrid(date)}\n      </div>\n    );\n  };\n\n  const renderDays = () => {\n    const start = moment(selectedDate).startOf('week')\n    const end = moment(selectedDate).endOf('week')\n    const diff: number = end.diff(start, 'days')\n    let weeks: Moment[] = []\n\n    for (let i = 0; i <= diff; i++) {\n      //if i add one day for moment, it will change my start date of week.\n      //it is the main reason why i get start of week in loop\n      const startOfWeek = moment(selectedDate).startOf('week')\n      weeks.push(startOfWeek.add(i, 'days'))\n    }\n\n    const updatedDays = weeks.map((day: Moment, i: number) => {\n      const format = day.format('DD/MM');\n\n      return {\n        dayName: `${t(`days.${DAYS[i]}`)} (${format})`,\n        date: day,\n      };\n    });\n\n\n    return (\n      <div className=\"calendar-days\">\n        {updatedDays.map((day: any, index) => renderDay(day, index))}\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <Header />\n      <main className=\"board\">\n        <Times />\n        <article className=\"calendar\">{renderDays()}</article>\n\n        <AlertDialogSlide\n          open={openDialog}\n          handleClose={onCloseDialog}\n          date={selectedDate}\n          handleAddEvent={!!event ? handleEditEvent : handleAddEvent}\n          isEditMode={!!event}\n          event={event}\n          typeOfPicker={monthCalendar}\n        />\n      </main>\n    </>\n  )\n}\n\nexport default Weekly","import { useContext } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport Header from 'components/common/Header'\n\nimport Context from '../../Context'\n\nfunction MonthlyHeader() {\n\n  const {\n    handlePrevMonth,\n    handleNextMonth,\n  } = useContext(Context)\n  const { t } = useTranslation();\n\n  return (\n    <Header\n      handlePrev={handlePrevMonth}\n      handleNext={handleNextMonth}\n      titlePrev={t(`titles.prevMonth`)}\n      titleNext={t(`titles.nextMonth`)}\n    />\n  );\n}\n\nexport default MonthlyHeader;\n","import React, { useState, useMemo, useEffect, useContext } from 'react'\nimport clsx from 'clsx'\nimport moment from 'moment'\nimport { useTranslation } from \"react-i18next\";\nimport { useLocation } from 'react-router-dom'\n\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport AlertDialogSlide from 'components/common/Dialog'\nimport { DAYS } from 'invariants'\nimport { Events } from 'typedefs'\n\nimport Context from '../../Context'\nimport Header from './MonthlyHeader'\n\nimport './style.scss'\n\ntype DatesOptions = {\n  inMonth: boolean\n  date: Date\n}\n\nconst MonthlyCalendar: React.FC = () => {\n  const {\n    eventList,\n    selectedDate,\n    selectedMonth,\n    selectedYear,\n    changeMonth,\n    changeYear,\n    openDialog,\n    handleOpenDialog,\n    handleCloseDialog,\n    handleChangeDay,\n    handleAddEvent,\n    handleEditEvent,\n    handledeleteEvent,\n  } = useContext(Context)\n  const { t } = useTranslation();\n  const { pathname } = useLocation();\n  const monthCalendar = useMemo(() => pathname.replace('/', ''), [pathname])\n  const [dates, setDates] = useState<DatesOptions[]>([])\n  const [event, setEditEvent] = useState<Events.Event | null>(null)\n\n  let weeks = 4;\n  if (dates.length > 0) {\n    weeks = moment(dates[dates.length - 1].date).diff(\n      dates[0].date, 'week');\n  }\n\n  const onCloseDialog = () => {\n    setEditEvent(null)\n    handleCloseDialog()\n  }\n\n  const cls = clsx(\"calendar\", `calendar-${weeks}-weeks`);\n\n  useEffect(() => {\n    const month = moment().month(selectedMonth).year(selectedYear).format()\n    const preDays: DatesOptions[] = []\n    const dates: DatesOptions[] = []\n    const nextDates: DatesOptions[] = []\n\n    const dateFrom = moment(month).subtract(1, 'months').endOf('month');\n    let preMonthDayOffset: number = dateFrom.day()\n\n    while (preMonthDayOffset >= 0 && preMonthDayOffset < 7) {\n      preDays.push({\n        inMonth: false,\n        date: new Date(\n          `${moment(dateFrom).year()}-${moment(dateFrom).month() + 1\n          }-${moment(dateFrom).date() - preMonthDayOffset}`\n        ),\n      });\n      preMonthDayOffset--;\n    }\n\n    const totalDaysInCurrentMonth = moment(month).daysInMonth()\n\n    for (let day = 1; day <= totalDaysInCurrentMonth; day++) {\n      dates.push({\n        inMonth: true,\n        date: new Date(`${selectedYear}-${selectedMonth + 1}-${day}`),\n      });\n    }\n\n    const dateFromNextMonth = moment(month).add(1, 'months').startOf('month').format('YYYY-MM-DD');\n    const nextMonthDayOffset: number = 7 - moment(dateFromNextMonth).day()\n\n    const nextMonthFirstDate = moment(month).add(1, 'M').startOf('month').format('YYYY-MM-DD hh:mm:ss')\n\n    for (let i = 0; i < nextMonthDayOffset; i++) {\n      nextDates.push({\n        inMonth: false,\n        date: new Date(\n          `${moment(nextMonthFirstDate).year()}-${moment(nextMonthFirstDate).month() + 1\n          }-${moment(nextMonthFirstDate).date() + i}`\n        ),\n      });\n    }\n\n    setDates([...preDays, ...dates, ...nextDates])\n  }, [selectedMonth, selectedYear])\n\n  const renderDay = (day: string) => {\n    return (\n      <div className=\"calendar-day\" key={day}>\n        {day}\n      </div>\n    );\n  }\n\n  const renderDays = () => {\n    const updatedDAys = DAYS.map((d) => `${t(`days.${d}`)}`);\n    return (\n      <header className=\"calendar-grid\">\n        {updatedDAys.map((day) => renderDay(day))}\n      </header>\n    );\n  }\n\n  const renderDate = (dateObj: DatesOptions, ind: number) => {\n    const { date, inMonth } = dateObj;\n    const cls = clsx(\"calendar-date\", {\n      \"in-month\": inMonth,\n      highlight: moment(date).format('DD-MM-YYYY') === moment(selectedDate).format('DD-MM-YYYY'),\n    });\n\n    const currentTasks = eventList.filter((item: Events.Event) =>\n      moment(date).format('YYYY-MM-DD') === moment(item.dateStart).format('YYYY-MM-DD')\n    );\n\n\n    return (\n      <div\n        className={cls}\n        key={ind}\n        style={{\n          overflowY: currentTasks.length ? \"auto\" : \"hidden\"\n        }}\n        onClick={() => {\n          handleChangeDay(date)\n          changeYear(moment(date).year())\n          changeMonth(moment(date).month())\n          handleOpenDialog()\n        }}\n      >\n        {moment(date).format('DD')}\n        <br />\n        <br />\n        < >\n          {\n            currentTasks.map((item: Events.Event) => {\n              return (\n                <div\n                  key={item.id}\n                  className=\"month-event\"\n                  onClick={(e) => {\n                    e.stopPropagation()\n                    setEditEvent(item)\n                    handleOpenDialog()\n                  }}\n                  style={{\n                    marginBottom: '5px',\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: 'center',\n                    backgroundColor: \"#cdcdcd\",\n                  }} >\n                  {item.task}\n                  <div className=\"delete-event\">\n                    <IconButton edge=\"end\" size='small' aria-label=\"delete\"\n                      onClick={(e) => {\n                        e.stopPropagation()\n                        handledeleteEvent(item.id)\n                      }}>\n                      <DeleteIcon />\n                    </IconButton>\n                  </div>\n                </div>\n              )\n            })\n          }\n        </>\n      </div>\n    );\n  }\n\n  const renderGrid = () => {\n    return (\n      <section className=\"calendar-grid\">\n        {dates.map((date: DatesOptions, ind: number) => renderDate(date, ind))}\n      </section>\n    );\n  }\n\n  return (\n    <>\n      <Header />\n      <article className={cls}>\n        {renderDays()}\n        {renderGrid()}\n\n        <AlertDialogSlide\n          open={openDialog}\n          handleClose={onCloseDialog}\n          date={selectedDate}\n          handleAddEvent={!!event ? handleEditEvent : handleAddEvent}\n          isEditMode={!!event}\n          event={event}\n          typeOfPicker={monthCalendar}\n        />\n      </article>\n    </>\n  )\n}\n\nexport default MonthlyCalendar","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport translationEN from \"./locales/en.json\";\nimport translationUA from \"./locales/ua.json\";\n\nconst setLanguage = () => {\n  const language = localStorage.getItem(\"language\");\n  switch (language) {\n    case \"en\":\n      return \"en\";\n    case \"ua\":\n      return \"ua\";\n    default:\n      return \"en\";\n  }\n};\n\nexport const defaultLanguage: string = setLanguage();\n\nconst resources = {\n  en: {\n    translation: translationEN,\n  },\n  ua: {\n    translation: translationUA,\n  },\n};\n\ni18n.use(initReactI18next).init({\n  lng: defaultLanguage,\n  fallbackLng: defaultLanguage,\n  resources,\n});\n\nexport default i18n;\n","import { BrowserRouter, Route, Redirect } from 'react-router-dom';\nimport { I18nextProvider } from \"react-i18next\"\n\nimport Weekly from 'pages/Weekly'\nimport MonthlyCalendar from 'pages/Calendar'\nimport i18n from \"i18n\"\n\nimport { CalendarProvider } from './Context'\nimport './App.scss';\n\n\nfunction App() {\n  return (\n    <I18nextProvider i18n={i18n}>\n      <CalendarProvider>\n        <div className=\"app\">\n          <div className=\"wrapper\">\n            <BrowserRouter>\n              <Route exact path='/calendar-2.0/month' component={MonthlyCalendar} />\n              <Route exact path='/calendar-2.0/week' component={Weekly} />\n\n              <Redirect from='/' to=\"/calendar-2.0/month\" />\n            </BrowserRouter>\n          </div>\n        </div>\n      </ CalendarProvider>\n    </I18nextProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}